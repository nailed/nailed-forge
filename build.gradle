buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "reening"
            url = "http://maven.reening.nl"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.0-SNAPSHOT'
        classpath 'jk_5.nailed.gradle:Nailed-Gradle:1.1-SNAPSHOT'
    }
}

apply plugin: 'nailed'

group = 'jk_5.nailed'
version = '2.0-SNAPSHOT'
archivesBaseName = 'nailed'
targetCompatibility = '1.7'
sourceCompatibility = '1.7'

minecraft{
    version = '1.6.4-9.11.1.964'
    assetDir = 'runtime/client/assets'
    accessTransformers += 'src/main/resources/nailed_at.cfg'
}

configurations{
    packed
    compile.extendsFrom packed
    deployerJars
    launcher
}

dependencies {
    packed name: 'CodeChickenLib', version: '1.6.4-1.0.0.44', ext: 'jar'
    packed 'pircbot:pircbot:1.5.0'
    packed 'io.netty:netty-all:4.0.14.Beta1'

    compile 'org.projectlombok:lombok:1.12.2'

    testCompile 'junit:junit:4.11'

    deployerJars 'org.apache.maven.wagon:wagon-ssh:2.2'

    launcher 'jk_5.nailed:launcher:1.0'
    launcher 'jk_5.nailed.deploy:forge:1.0'
    launcher 'jk_5.nailed.deploy:minecraft:1.0'
}

nailed {
    minecraftVersion = '1.6.4'
}

/*nailedInstaller {
    version = '1.0'
}*/

nailedLauncher {
    versionName = 'Nailed-2.0'
    mainClass = 'net.minecraft.launchwrapper.Launch'

    loadingMavenUrl = 'http://maven.reening.nl/'
    loadingDependencies = configurations.launcher

    tweakers += 'jk_5.nailed.launcher.UpdatingTweaker'
    tweakers += 'cpw.mods.fml.common.launcher.FMLTweaker'

    remoteProfileDir = 'nailed'

    deployHost = 'maven.reening.nl'
    deployUsername = 'maven'
    deployPassword = deployPassword
}

jar {
    manifest {
        attributes 'FMLCorePlugin': 'jk_5.nailed.coremod.NailedFMLPlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
        attributes 'Version': project.version
    }
    from {
        configurations.packed.collect {
            it.isDirectory() ? it : zipTree(it).matching {
                exclude "META-INF", "META-INF/**", "*META-INF*", "meta-inf"
                exclude "**.jar", "**/*.jar", "*.jar"
            }
        }
    }
    //doLast {
    //    ant.signjar(jar: jar.archivePath, alias: 'Nailed', keystore: nailedKeystoreLocation, storepass: nailedKeystorePassword)
    //}
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(url: "scp://maven.reening.nl/media/maven/") {
            authentication(userName: mavenUsername, password: mavenPassword)
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}
