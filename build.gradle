buildscript {
    repositories {
        //mavenLocal()
        mavenCentral()
        maven {
            name = "reening"
            url = "http://maven.reening.nl"
        }
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'jk_5.nailed.gradle:nailed-gradle:1.1.23'
    }
}

if(!project.hasProperty("keystoreLocation")) ext.keystoreLocation = "."
if(!project.hasProperty("keystoreAlias")) ext.keystoreAlias = ""
if(!project.hasProperty("keystorePassword")) ext.keystorePassword = ""

apply plugin: 'nailed'
apply plugin: 'forge'

version = '2.0-SNAPSHOT'

nailed {
    minecraftVersion = '1.7.2'

    versionName = 'Nailed-1.7.2'
    mainClass = 'net.minecraft.launchwrapper.Launch'

    loadingMavenUrl = 'http://maven.reening.nl/'

    deploy artifact: 'nailedClient', project: 'Client', load: true, reobf: true, coremod: 'jk_5.nailed.client.coremod.NailedFMLPlugin'
    deploy artifact: 'nailedCommon', project: 'Common', load: true, reobf: true, coremod: 'jk_5.nailed.common.coremod.NailedCommonFMLPlugin'
    //deploy artifact: 'nailedMumbleLink', project: 'MumbleLink', load: true
    deploy artifact: 'nailedCrashReporter', project: 'CrashReporter', load: true
    deploy artifact: 'nailedUpdater', project: 'Updater', restart: 'game', mclib: true
    deploy artifact: 'forge', maven: 'net.minecraftforge:forge:1.7.2-10.12.1.1072:universal', load: true, server: 'http://files.minecraftforge.net/maven/'
    deploy artifact: 'minecraft', maven: 'versions::1.7.2', localmaven: 'net.minecraft:minecraft:1.7.2', load: true, server: 'https://s3.amazonaws.com/Minecraft.Download/'

    tweaker = 'jk_5.nailed.crashreporter.CrashReporterTweaker'
    tweaker = 'cpw.mods.fml.common.launcher.FMLTweaker'

    remoteProfileDir = 'nailed'

    deployHost = 'maven.reening.nl'
    deployUsername = 'maven'

    if(project.hasProperty("deploymaven")){
        deployPassword = project.deploymaven.password
    }
}

createLauncherProfile {
    dependency "jk_5.nailed:Nailed-Updater:0.1", "http://maven.reening.nl/"

    tweaker 'jk_5.nailed.updater.UpdatingTweaker'
}

minecraft {
    version = '1.7.2-10.12.1.1072'
    assetDir = 'runtime/client/assets'
}

notification {
    hookUrl = 'http://n.tkte.ch/h/2168/UQ4N8t9fTBRGSyeXZT5DE6fV'
}

allprojects {
    group = 'jk_5.nailed'
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'

    configurations{
        packed
        compile.extendsFrom packed
    }

    jar {
        baseName = 'Nailed-' + baseName
        destinationDir = new File(rootProject.getBuildDir(), 'libs')

        manifest {
            attributes 'Specification-Title': 'Nailed PVP Mod for Minecraft'
            attributes 'Specification-Version': project.version
            attributes 'Specification-Vendor': 'jk-5'
            attributes 'Implementation-Title': 'jk_5.nailed'
            attributes 'Implementation-Version': project.version
            attributes 'Implementation-Vendor': 'jk-5'
        }

        from {
            configurations.packed.collect {
                it.isDirectory() ? it : zipTree(it).matching {
                    exclude "META-INF", "META-INF/**", "*META-INF*", "meta-inf"
                    exclude "**.jar", "**/*.jar", "*.jar"
                }
            }
        }
    }

    if(rootProject.keystoreLocation != "."){
        rootProject.tasks.reobf.doLast {
            project.getLogger().lifecycle(":" + project.name + ":sign")
            ant.signjar(
                    destDir: jar.destinationDir,
                    jar: jar.getArchivePath(),
                    keystore: rootProject.keystoreLocation,
                    alias: rootProject.keystoreAlias,
                    storepass: rootProject.keystorePassword
            )
        }
    }

    dependencies {
        compile 'com.google.code.findbugs:jsr305:1.3.9'

        testCompile 'junit:junit:4.11'
    }

    sourceSets.main.resources.getFiles().each { file ->
        if (file.getName().endsWith("_at.cfg")){
            rootProject.minecraft.at file.getPath()
        }
    }

    processResources {
        from(sourceSets.main.resources.srcDirs) {
            include 'mcmod.info'
            include 'version.properties'
            expand 'version': project.version, 'mcversion': rootProject.minecraft.version
        }
        from(sourceSets.main.resources.srcDirs) {
            exclude 'mcmod.info'
            exclude 'version.properties'
        }
    }

    task javadocJar(type:Jar, dependsOn:javadoc){
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type:Jar){
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }
}
